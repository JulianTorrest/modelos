import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

# Configuraci√≥n de la p√°gina de Streamlit
st.set_page_config(
    page_title="An√°lisis de Baloto",
    page_icon="üé∞",
    layout="wide"
)

st.title("üé∞ An√°lisis Exploratorio de Datos del Baloto üá®üá¥")

# URL del archivo CSV en GitHub
url = "https://raw.githubusercontent.com/JulianTorrest/modelos/refs/heads/main/Baloto.csv"

# Usar cach√© para cargar los datos solo una vez
@st.cache_data
def load_data(url):
    try:
        df = pd.read_csv(url)
        # Convertir la columna 'Fecha' a formato de fecha
        df['Fecha'] = pd.to_datetime(df['Fecha'], format='%d/%m/%Y')
        # Extraer el a√±o, mes y d√≠a para posibles an√°lisis
        df['A√±o'] = df['Fecha'].dt.year
        df['Mes'] = df['Fecha'].dt.month
        df['Dia'] = df['Fecha'].dt.day
        # Calcular la suma de balotas
        df['SumaBalotas'] = df[['Balota 1', 'Balota 2', 'Balota 3', 'Balota 4', 'Balota 5']].sum(axis=1)
        return df
    except Exception as e:
        st.error(f"Error al cargar el archivo: {e}")
        return pd.DataFrame() # Retorna un DataFrame vac√≠o en caso de error

df = load_data(url)

if not df.empty:
    st.success("¬°Datos de Baloto cargados exitosamente!")

    # --- Mostrar Primeras Filas ---
    st.header("üîç Primeras Filas del Conjunto de Datos")
    st.dataframe(df.head())

    # --- Informaci√≥n General ---
    st.header("üìä Informaci√≥n General y Estad√≠sticas Descriptivas")
    st.subheader("Tipos de Datos y Valores No Nulos")
    st.write(df.info(buf=st.io.StringIO())) # Redirige la salida de info() a Streamlit

    st.subheader("Estad√≠sticas Descriptivas de las Balotas")
    st.dataframe(df[['Balota 1', 'Balota 2', 'Balota 3', 'Balota 4', 'Balota 5', 'SuperBalota']].describe())

    # --- Distribuci√≥n de Cada Balota ---
    st.header("üìà Distribuci√≥n de Frecuencia de las Balotas")
    st.write("Observa qu√© n√∫meros han salido con mayor frecuencia en cada posici√≥n.")

    fig1, axes1 = plt.subplots(2, 3, figsize=(18, 12))
    axes1 = axes1.flatten() # Aplanar para facilitar la iteraci√≥n

    for i in range(1, 6):
        sns.histplot(df[f'Balota {i}'], bins=range(1, 44), kde=True, ax=axes1[i-1])
        axes1[i-1].set_title(f'Distribuci√≥n Balota {i}')
        axes1[i-1].set_xticks(range(1, 44, 4)) # Ajuste de ticks para mejor visualizaci√≥n

    sns.histplot(df['SuperBalota'], bins=range(1, 17), kde=True, ax=axes1[5])
    axes1[5].set_title('Distribuci√≥n SuperBalota')
    axes1[5].set_xticks(range(1, 17))

    plt.tight_layout()
    st.pyplot(fig1) # Muestra la figura en Streamlit

    # --- Top 10 Balotas M√°s Frecuentes ---
    st.header("‚≠ê Balotas M√°s Frecuentes")
    st.write("Descubre los n√∫meros que m√°s han aparecido en el hist√≥rico del Baloto.")

    col1, col2 = st.columns(2)

    with col1:
        st.subheader("Top 10 Balotas Regulares")
        all_balotas = pd.concat([df['Balota 1'], df['Balota 2'], df['Balota 3'], df['Balota 4'], df['Balota 5']])
        top_balotas = all_balotas.value_counts().head(10)
        fig2, ax2 = plt.subplots(figsize=(10, 6))
        sns.barplot(x=top_balotas.index, y=top_balotas.values, palette='viridis', ax=ax2)
        ax2.set_title('Top 10 Balotas M√°s Frecuentes (excluyendo SuperBalota)')
        ax2.set_xlabel('N√∫mero de Balota')
        ax2.set_ylabel('Frecuencia')
        st.pyplot(fig2)

    with col2:
        st.subheader("Top 10 SuperBalotas")
        top_superbalotas = df['SuperBalota'].value_counts().head(10)
        fig3, ax3 = plt.subplots(figsize=(10, 6))
        sns.barplot(x=top_superbalotas.index, y=top_superbalotas.values, palette='magma', ax=ax3)
        ax3.set_title('Top 10 SuperBalotas M√°s Frecuentes')
        ax3.set_xlabel('N√∫mero de SuperBalota')
        ax3.set_ylabel('Frecuencia')
        st.pyplot(fig3)

    # --- An√°lisis de Correlaci√≥n ---
    st.header("üîó Matriz de Correlaci√≥n entre Balotas")
    st.write("Aunque las balotas son te√≥ricamente independientes, esta matriz muestra cualquier correlaci√≥n observada.")
    numeric_cols = ['Balota 1', 'Balota 2', 'Balota 3', 'Balota 4', 'Balota 5', 'SuperBalota']
    correlation_matrix = df[numeric_cols].corr()

    fig4, ax4 = plt.subplots(figsize=(8, 6))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", ax=ax4)
    ax4.set_title('Matriz de Correlaci√≥n entre Balotas')
    st.pyplot(fig4)

    # --- Tendencia de la Suma de Balotas a lo largo del Tiempo ---
    st.header("‚è≥ Tendencia de la Suma de Balotas")
    st.write("Visualiza c√≥mo la suma total de las balotas ha variado a lo largo de los a√±os.")

    fig5, ax5 = plt.subplots(figsize=(12, 6))
    sns.lineplot(x='Fecha', y='SumaBalotas', data=df, ax=ax5)
    ax5.set_title('Suma de Balotas a lo largo del Tiempo')
    ax5.set_xlabel('Fecha')
    ax5.set_ylabel('Suma de las Balotas')
    st.pyplot(fig5)

    # --- Suma de Balotas por A√±o ---
    st.header("üìÖ Suma de Balotas por A√±o")
    st.write("Un vistazo a la distribuci√≥n de la suma de las balotas para cada a√±o.")

    fig6, ax6 = plt.subplots(figsize=(12, 6))
    sns.boxplot(x='A√±o', y='SumaBalotas', data=df, ax=ax6)
    ax6.set_title('Suma de Balotas por A√±o')
    ax6.set_xlabel('A√±o')
    ax6.set_ylabel('Suma de las Balotas')
    st.pyplot(fig6)

else:
    st.warning("No se pudieron cargar los datos. Por favor, verifica la URL del archivo CSV.")
